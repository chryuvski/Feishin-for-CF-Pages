import{u as T,y as G,z as q,ac as w,d as N,l as R,r as y,b3 as i,cN as l,q as C,bj as _,j as S,aH as j,cv as z,cw as E,aU as B,n as F,e as K}from"./index-qz_z9GmZ.js";import{u as Q}from"./use-handle-favorite-DgTaOWZK.js";const V=({gridRef:h,itemCount:d})=>{const{pageKey:p}=T(),u=G(),t=q(),I=w(),{display:b,filter:a,grid:e}=N({key:p}),{setGrid:A}=R(),x=Q({gridRef:h,server:t}),P=y.useMemo(()=>{const s=[l.nameFull];switch(a.sortBy){case i.DURATION:s.push(l.duration);break;case i.NAME:s.push(l.songCount);break;case i.OWNER:s.push(l.owner);break;case i.PUBLIC:s.push(l.public);break;case i.SONG_COUNT:s.push(l.songCount);break;case i.UPDATED_AT:break}return s},[a.sortBy]),k=y.useCallback(s=>{A({data:{scrollOffset:s.scrollOffset},key:p})},[p,A]),D=y.useCallback(()=>{const s={...a},o=u.getQueriesData({exact:!1,fetchStatus:"idle",queryKey:C.playlists.list((t==null?void 0:t.id)||"",s),stale:!1}),r=[];for(const[,f]of o){const{items:n,startIndex:c}=f||{};if(n&&n.length!==1&&c!==void 0){let L=0;for(let m=c;m<c+n.length;m+=1)r[m]=n[L],L+=1}}return r},[a,u,t==null?void 0:t.id]),O=y.useCallback(async({skip:s,take:o})=>{if(!t)return[];const r={limit:o,...a,_custom:{},startIndex:s},f=C.playlists.list((t==null?void 0:t.id)||"",r);return await u.fetchQuery(f,async({signal:c})=>_.getPlaylistList({apiClientProps:{server:t,signal:c},query:r}))},[a,u,t]);return S.jsx(j,{children:S.jsx(z,{children:({height:s,width:o})=>S.jsx(E,{cardRows:P,display:b||K.CARD,fetchFn:O,fetchInitialData:D,handleFavorite:x,handlePlayQueueAdd:I,height:s,initialScrollOffset:(e==null?void 0:e.scrollOffset)||0,itemCount:d||0,itemGap:(e==null?void 0:e.itemGap)??10,itemSize:(e==null?void 0:e.itemSize)||200,itemType:F.PLAYLIST,loading:d==null,minimumBatchSize:40,onScroll:k,ref:h,route:{route:B.PLAYLISTS_DETAIL_SONGS,slugs:[{idProperty:"id",slugProperty:"playlistId"}]},width:o},`playlist-list-${t==null?void 0:t.id}`)})})};export{V as PlaylistListGridView};
//# sourceMappingURL=playlist-list-grid-view-C7D27PQd.js.map
