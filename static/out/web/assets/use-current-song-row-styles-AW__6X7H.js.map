{"version":3,"file":"use-current-song-row-styles-AW__6X7H.js","sources":["../../../src/renderer/components/virtual-table/hooks/use-current-song-row-styles.ts"],"sourcesContent":["import type { AgGridReact as AgGridReactType } from '@ag-grid-community/react/lib/agGridReact';\n\nimport { RowClassRules, RowNode } from '@ag-grid-community/core';\nimport { MutableRefObject, useEffect, useMemo, useRef } from 'react';\n\nimport { useAppFocus } from '/@/renderer/hooks';\nimport { useCurrentSong, usePlayerStore } from '/@/renderer/store';\nimport { Song } from '/@/shared/types/domain-types';\nimport { PlayerStatus } from '/@/shared/types/types';\n\ninterface UseCurrentSongRowStylesProps {\n    tableRef: MutableRefObject<AgGridReactType | null>;\n}\n\nexport const useCurrentSongRowStyles = ({ tableRef }: UseCurrentSongRowStylesProps) => {\n    const currentSong = useCurrentSong();\n    const isFocused = useAppFocus();\n    const isFocusedRef = useRef<boolean>(isFocused);\n\n    useEffect(() => {\n        // Redraw rows if the app focus changes\n        if (isFocusedRef.current !== isFocused) {\n            isFocusedRef.current = isFocused;\n            if (tableRef?.current) {\n                const { api, columnApi } = tableRef?.current || {};\n                if (api == null || columnApi == null) {\n                    return;\n                }\n\n                const currentNode = currentSong?.id ? api.getRowNode(currentSong.id) : undefined;\n\n                const rowNodes = [currentNode].filter((e) => e !== undefined) as RowNode<any>[];\n\n                if (rowNodes) {\n                    api.redrawRows({ rowNodes });\n                }\n            }\n        }\n    }, [currentSong?.id, isFocused, tableRef]);\n\n    const rowClassRules = useMemo<RowClassRules<Song> | undefined>(() => {\n        return {\n            'current-song': (params) => {\n                return (\n                    currentSong?.id !== undefined &&\n                    params?.data?.id === currentSong?.id &&\n                    params?.data?.albumId === currentSong?.albumId\n                );\n            },\n        };\n    }, [currentSong?.albumId, currentSong?.id]);\n\n    useEffect(() => {\n        // Redraw song rows when current song changes\n        const unsubSongChange = usePlayerStore.subscribe(\n            (state) => state.current.song,\n            (song, previousSong) => {\n                if (tableRef?.current) {\n                    const { api, columnApi } = tableRef?.current || {};\n                    if (api == null || columnApi == null) {\n                        return;\n                    }\n\n                    const currentNode = song?.id ? api.getRowNode(song.id) : undefined;\n\n                    const previousNode = previousSong?.id\n                        ? api.getRowNode(previousSong?.id)\n                        : undefined;\n\n                    const rowNodes = [currentNode, previousNode].filter(\n                        (e) => e !== undefined,\n                    ) as RowNode<any>[];\n\n                    api.redrawRows({ rowNodes });\n                }\n            },\n            { equalityFn: (a, b) => a?.id === b?.id },\n        );\n\n        // Redraw song rows when the status changes\n        const unsubStatusChange = usePlayerStore.subscribe(\n            (state) => [state.current.status, state.current.song],\n            (current: (PlayerStatus | Song | undefined)[]) => {\n                const song = current[1] as Song;\n\n                if (tableRef?.current) {\n                    const { api, columnApi } = tableRef?.current || {};\n                    if (api == null || columnApi == null) {\n                        return;\n                    }\n\n                    const currentNode = song?.id ? api.getRowNode(song.id) : undefined;\n                    const rowNodes = [currentNode].filter((e) => e !== undefined) as RowNode<any>[];\n\n                    api.redrawRows({ rowNodes });\n                }\n            },\n            {\n                equalityFn: (a, b) => (a[0] as PlayerStatus) === (b[0] as PlayerStatus),\n            },\n        );\n\n        return () => {\n            unsubSongChange();\n            unsubStatusChange();\n        };\n    }, [tableRef]);\n\n    return {\n        rowClassRules,\n    };\n};\n"],"names":["useCurrentSongRowStyles","tableRef","currentSong","useCurrentSong","isFocused","useAppFocus","isFocusedRef","useRef","useEffect","api","columnApi","rowNodes","e","rowClassRules","useMemo","params","_a","_b","unsubSongChange","usePlayerStore","state","song","previousSong","currentNode","previousNode","a","b","unsubStatusChange","current"],"mappings":"gEAcO,MAAMA,EAA0B,CAAC,CAAE,SAAAC,KAA6C,CACnF,MAAMC,EAAcC,EAAe,EAC7BC,EAAYC,EAAY,EACxBC,EAAeC,SAAgBH,CAAS,EAE9CI,EAAAA,UAAU,IAAM,CAER,GAAAF,EAAa,UAAYF,IACzBE,EAAa,QAAUF,EACnBH,GAAA,MAAAA,EAAU,SAAS,CACnB,KAAM,CAAE,IAAAQ,EAAK,UAAAC,CAAc,GAAAT,GAAA,YAAAA,EAAU,UAAW,CAAC,EAC7C,GAAAQ,GAAO,MAAQC,GAAa,KAC5B,OAKE,MAAAC,EAAW,CAFGT,GAAA,MAAAA,EAAa,GAAKO,EAAI,WAAWP,EAAY,EAAE,EAAI,MAE1C,EAAE,OAAQU,GAAMA,IAAM,MAAS,EAExDD,GACIF,EAAA,WAAW,CAAE,SAAAE,EAAU,CAC/B,GAGT,CAACT,GAAA,YAAAA,EAAa,GAAIE,EAAWH,CAAQ,CAAC,EAEnC,MAAAY,EAAgBC,EAAAA,QAAyC,KACpD,CACH,eAAiBC,GAAW,SAEpB,OAAAb,GAAA,YAAAA,EAAa,MAAO,UACpBc,EAAAD,GAAA,YAAAA,EAAQ,OAAR,YAAAC,EAAc,OAAOd,GAAA,YAAAA,EAAa,OAClCe,EAAAF,GAAA,YAAAA,EAAQ,OAAR,YAAAE,EAAc,YAAYf,GAAA,YAAAA,EAAa,QAAA,CAGnD,GACD,CAACA,GAAA,YAAAA,EAAa,QAASA,GAAA,YAAAA,EAAa,EAAE,CAAC,EAE1CM,OAAAA,EAAAA,UAAU,IAAM,CAEZ,MAAMU,EAAkBC,EAAe,UAClCC,GAAUA,EAAM,QAAQ,KACzB,CAACC,EAAMC,IAAiB,CACpB,GAAIrB,GAAA,MAAAA,EAAU,QAAS,CACnB,KAAM,CAAE,IAAAQ,EAAK,UAAAC,CAAc,GAAAT,GAAA,YAAAA,EAAU,UAAW,CAAC,EAC7C,GAAAQ,GAAO,MAAQC,GAAa,KAC5B,OAGJ,MAAMa,EAAcF,GAAA,MAAAA,EAAM,GAAKZ,EAAI,WAAWY,EAAK,EAAE,EAAI,OAEnDG,EAAeF,GAAA,MAAAA,EAAc,GAC7Bb,EAAI,WAAWa,GAAA,YAAAA,EAAc,EAAE,EAC/B,OAEAX,EAAW,CAACY,EAAaC,CAAY,EAAE,OACxCZ,GAAMA,IAAM,MACjB,EAEIH,EAAA,WAAW,CAAE,SAAAE,EAAU,CAAA,CAEnC,EACA,CAAE,WAAY,CAACc,EAAGC,KAAMD,GAAA,YAAAA,EAAG,OAAOC,GAAA,YAAAA,EAAG,GAAG,CAC5C,EAGMC,EAAoBR,EAAe,UACpCC,GAAU,CAACA,EAAM,QAAQ,OAAQA,EAAM,QAAQ,IAAI,EACnDQ,GAAiD,CACxC,MAAAP,EAAOO,EAAQ,CAAC,EAEtB,GAAI3B,GAAA,MAAAA,EAAU,QAAS,CACnB,KAAM,CAAE,IAAAQ,EAAK,UAAAC,CAAc,GAAAT,GAAA,YAAAA,EAAU,UAAW,CAAC,EAC7C,GAAAQ,GAAO,MAAQC,GAAa,KAC5B,OAIE,MAAAC,EAAW,CADGU,GAAA,MAAAA,EAAM,GAAKZ,EAAI,WAAWY,EAAK,EAAE,EAAI,MAC5B,EAAE,OAAQT,GAAMA,IAAM,MAAS,EAExDH,EAAA,WAAW,CAAE,SAAAE,EAAU,CAAA,CAEnC,EACA,CACI,WAAY,CAACc,EAAGC,IAAOD,EAAE,CAAC,IAAwBC,EAAE,CAAC,CAAA,CAE7D,EAEA,MAAO,IAAM,CACOR,EAAA,EACES,EAAA,CACtB,CAAA,EACD,CAAC1B,CAAQ,CAAC,EAEN,CACH,cAAAY,CACJ,CACJ"}