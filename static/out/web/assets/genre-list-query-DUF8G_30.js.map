{"version":3,"file":"genre-list-query-DUF8G_30.js","sources":["../../../src/renderer/features/genres/queries/genre-list-query.ts"],"sourcesContent":["import type { QueryHookArgs } from '/@/renderer/lib/react-query';\nimport type { GenreListQuery } from '/@/shared/types/domain-types';\n\nimport { useQuery } from '@tanstack/react-query';\n\nimport { api } from '/@/renderer/api';\nimport { queryKeys } from '/@/renderer/api/query-keys';\nimport { getServerById } from '/@/renderer/store';\n\nexport const useGenreList = (args: QueryHookArgs<GenreListQuery>) => {\n    const { options, query, serverId } = args || {};\n    const server = getServerById(serverId);\n\n    return useQuery({\n        enabled: !!server,\n        queryFn: ({ signal }) => {\n            if (!server) throw new Error('Server not found');\n            return api.controller.getGenreList({ apiClientProps: { server, signal }, query });\n        },\n        queryKey: queryKeys.genres.list(server?.id || '', query),\n        staleTime: 1000 * 5,\n        ...options,\n    });\n};\n"],"names":["useGenreList","args","options","query","serverId","server","getServerById","useQuery","signal","api","queryKeys"],"mappings":"6DASa,MAAAA,EAAgBC,GAAwC,CACjE,KAAM,CAAE,QAAAC,EAAS,MAAAC,EAAO,SAAAC,CAAS,EAAIH,GAAQ,CAAC,EACxCI,EAASC,EAAcF,CAAQ,EAErC,OAAOG,EAAS,CACZ,QAAS,CAAC,CAACF,EACX,QAAS,CAAC,CAAE,OAAAG,KAAa,CACrB,GAAI,CAACH,EAAc,MAAA,IAAI,MAAM,kBAAkB,EACxC,OAAAI,EAAI,WAAW,aAAa,CAAE,eAAgB,CAAE,OAAAJ,EAAQ,OAAAG,GAAU,MAAAL,EAAO,CACpF,EACA,SAAUO,EAAU,OAAO,MAAKL,GAAA,YAAAA,EAAQ,KAAM,GAAIF,CAAK,EACvD,UAAW,IAAO,EAClB,GAAGD,CAAA,CACN,CACL"}