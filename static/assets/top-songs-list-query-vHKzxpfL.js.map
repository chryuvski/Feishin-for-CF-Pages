{"version":3,"file":"top-songs-list-query-vHKzxpfL.js","sources":["../../../src/renderer/features/artists/queries/album-artist-detail-query.ts","../../../src/renderer/features/artists/queries/top-songs-list-query.ts"],"sourcesContent":["import type { AlbumArtistDetailQuery } from '/@/shared/types/domain-types';\n\nimport { useQuery } from '@tanstack/react-query';\n\nimport { api } from '/@/renderer/api';\nimport { queryKeys } from '/@/renderer/api/query-keys';\nimport { QueryHookArgs } from '/@/renderer/lib/react-query';\nimport { getServerById } from '/@/renderer/store';\n\nexport const useAlbumArtistDetail = (args: QueryHookArgs<AlbumArtistDetailQuery>) => {\n    const { options, query, serverId } = args || {};\n    const server = getServerById(serverId);\n\n    return useQuery({\n        enabled: !!server?.id && !!query.id,\n        queryFn: ({ signal }) => {\n            if (!server) throw new Error('Server not found');\n            return api.controller.getAlbumArtistDetail({\n                apiClientProps: { server, signal },\n                query,\n            });\n        },\n        queryKey: queryKeys.albumArtists.detail(server?.id || '', query),\n        ...options,\n    });\n};\n","import type { QueryHookArgs } from '/@/renderer/lib/react-query';\nimport type { TopSongListQuery } from '/@/shared/types/domain-types';\n\nimport { useQuery } from '@tanstack/react-query';\n\nimport { api } from '/@/renderer/api';\nimport { queryKeys } from '/@/renderer/api/query-keys';\nimport { getServerById } from '/@/renderer/store';\n\nexport const useTopSongsList = (args: QueryHookArgs<TopSongListQuery>) => {\n    const { options, query, serverId } = args || {};\n    const server = getServerById(serverId);\n\n    return useQuery({\n        enabled: !!server?.id,\n        queryFn: ({ signal }) => {\n            if (!server) throw new Error('Server not found');\n            return api.controller.getTopSongs({ apiClientProps: { server, signal }, query });\n        },\n        queryKey: queryKeys.albumArtists.topSongs(server?.id || '', query),\n        ...options,\n    });\n};\n"],"names":["useAlbumArtistDetail","args","options","query","serverId","server","getServerById","useQuery","signal","api","queryKeys","useTopSongsList"],"mappings":"6DASa,MAAAA,EAAwBC,GAAgD,CACjF,KAAM,CAAE,QAAAC,EAAS,MAAAC,EAAO,SAAAC,CAAS,EAAIH,GAAQ,CAAC,EACxCI,EAASC,EAAcF,CAAQ,EAErC,OAAOG,EAAS,CACZ,QAAS,CAAC,EAACF,GAAA,MAAAA,EAAQ,KAAM,CAAC,CAACF,EAAM,GACjC,QAAS,CAAC,CAAE,OAAAK,KAAa,CACrB,GAAI,CAACH,EAAc,MAAA,IAAI,MAAM,kBAAkB,EACxC,OAAAI,EAAI,WAAW,qBAAqB,CACvC,eAAgB,CAAE,OAAAJ,EAAQ,OAAAG,CAAO,EACjC,MAAAL,CAAA,CACH,CACL,EACA,SAAUO,EAAU,aAAa,QAAOL,GAAA,YAAAA,EAAQ,KAAM,GAAIF,CAAK,EAC/D,GAAGD,CAAA,CACN,CACL,EChBaS,EAAmBV,GAA0C,CACtE,KAAM,CAAE,QAAAC,EAAS,MAAAC,EAAO,SAAAC,CAAS,EAAIH,GAAQ,CAAC,EACxCI,EAASC,EAAcF,CAAQ,EAErC,OAAOG,EAAS,CACZ,QAAS,CAAC,EAACF,GAAA,MAAAA,EAAQ,IACnB,QAAS,CAAC,CAAE,OAAAG,KAAa,CACrB,GAAI,CAACH,EAAc,MAAA,IAAI,MAAM,kBAAkB,EACxC,OAAAI,EAAI,WAAW,YAAY,CAAE,eAAgB,CAAE,OAAAJ,EAAQ,OAAAG,GAAU,MAAAL,EAAO,CACnF,EACA,SAAUO,EAAU,aAAa,UAASL,GAAA,YAAAA,EAAQ,KAAM,GAAIF,CAAK,EACjE,GAAGD,CAAA,CACN,CACL"}