import{y as z,z as D,ac as j,u as k,d as K,l as Q,bu as E,aa as B,r as c,cJ as F,q as G,h as V,j as h,aH as M,cv as N,cw as T,n as _,e as $}from"./index-qz_z9GmZ.js";const J=({gridRef:b,itemCount:u})=>{const l=z(),e=D(),q=j(),{id:f,pageKey:d}=k(),{display:p,filter:o,grid:t}=K({key:d}),{setGrid:S}=Q(),O=E(),[P,x]=B(),g=P.get("scrollOffset"),A=Number(f?g:t==null?void 0:t.scrollOffset)||0,I=c.useMemo(()=>[F.name],[]),L=c.useCallback(s=>{f?x(a=>(a.set("scrollOffset",String(s.scrollOffset)),a),{replace:!0}):S({data:{scrollOffset:s.scrollOffset},key:d})},[f,d,S,x]),w=c.useCallback(()=>{const s={...o},a=l.getQueriesData({exact:!1,fetchStatus:"idle",queryKey:G.genres.list((e==null?void 0:e.id)||"",s),stale:!1}),r=[];for(const[,y]of a){const{items:n,startIndex:i}=y||{};if(n&&n.length!==1&&i!==void 0){let C=0;for(let m=i;m<i+n.length;m+=1)r[m]=n[C],C+=1}}return r},[o,l,e==null?void 0:e.id]),R=c.useCallback(async({skip:s,take:a})=>{if(!e)return[];const r={...o,limit:a,startIndex:s},y=G.albums.list((e==null?void 0:e.id)||"",r);return await l.fetchQuery({queryFn:async({signal:i})=>V.controller.getGenreList({apiClientProps:{server:e,signal:i},query:r}),queryKey:y})},[o,l,e]);return h.jsx(M,{children:h.jsx(N,{children:({height:s,width:a})=>h.jsx(T,{cardRows:I,display:p||$.CARD,fetchFn:R,fetchInitialData:w,handlePlayQueueAdd:q,height:s,initialScrollOffset:A,itemCount:u||0,itemGap:(t==null?void 0:t.itemGap)??10,itemSize:(t==null?void 0:t.itemSize)||200,itemType:_.GENRE,loading:u==null,minimumBatchSize:40,onScroll:L,ref:b,route:{route:O,slugs:[{idProperty:"id",slugProperty:"genreId"}]},width:a},`album-list-${e==null?void 0:e.id}-${p}`)})})};export{J as GenreListGridView};
//# sourceMappingURL=genre-list-grid-view-z6p32cB3.js.map
