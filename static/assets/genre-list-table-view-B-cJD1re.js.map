{"version":3,"file":"genre-list-table-view-B-cJD1re.js","sources":["../../../src/renderer/features/genres/components/genre-list-table-view.tsx"],"sourcesContent":["import type { AgGridReact as AgGridReactType } from '@ag-grid-community/react/lib/agGridReact';\n\nimport { RowDoubleClickedEvent } from '@ag-grid-community/core';\nimport { MutableRefObject, useCallback } from 'react';\nimport { generatePath, useNavigate } from 'react-router';\n\nimport { VirtualGridAutoSizerContainer } from '/@/renderer/components/virtual-grid';\nimport { VirtualTable } from '/@/renderer/components/virtual-table';\nimport { useVirtualTable } from '/@/renderer/components/virtual-table/hooks/use-virtual-table';\nimport { useListContext } from '/@/renderer/context/list-context';\nimport { GENRE_CONTEXT_MENU_ITEMS } from '/@/renderer/features/context-menu/context-menu-items';\nimport { useGenreRoute } from '/@/renderer/hooks/use-genre-route';\nimport { useCurrentServer } from '/@/renderer/store';\nimport { LibraryItem } from '/@/shared/types/domain-types';\n\ninterface GenreListTableViewProps {\n    itemCount?: number;\n    tableRef: MutableRefObject<AgGridReactType | null>;\n}\n\nexport const GenreListTableView = ({ itemCount, tableRef }: GenreListTableViewProps) => {\n    const server = useCurrentServer();\n    const { customFilters, pageKey } = useListContext();\n    const navigate = useNavigate();\n    const genrePath = useGenreRoute();\n\n    const tableProps = useVirtualTable({\n        contextMenu: GENRE_CONTEXT_MENU_ITEMS,\n        customFilters,\n        itemCount,\n        itemType: LibraryItem.GENRE,\n        pageKey,\n        server,\n        tableRef,\n    });\n\n    const onRowDoubleClicked = useCallback(\n        (e: RowDoubleClickedEvent) => {\n            const { data } = e;\n            if (!data) return;\n\n            navigate(generatePath(genrePath, { genreId: data.id }));\n        },\n        [genrePath, navigate],\n    );\n\n    return (\n        <VirtualGridAutoSizerContainer>\n            <VirtualTable\n                // https://github.com/ag-grid/ag-grid/issues/5284\n                // Key is used to force remount of table when display, rowHeight, or server changes\n                key={`table-${tableProps.rowHeight}-${server?.id}`}\n                ref={tableRef}\n                {...tableProps}\n                onRowDoubleClicked={onRowDoubleClicked}\n            />\n        </VirtualGridAutoSizerContainer>\n    );\n};\n"],"names":["GenreListTableView","itemCount","tableRef","server","useCurrentServer","customFilters","pageKey","useListContext","navigate","useNavigate","genrePath","useGenreRoute","tableProps","useVirtualTable","GENRE_CONTEXT_MENU_ITEMS","LibraryItem","onRowDoubleClicked","useCallback","e","data","generatePath","VirtualGridAutoSizerContainer","jsx","VirtualTable"],"mappings":"wKAoBO,MAAMA,EAAqB,CAAC,CAAE,UAAAC,EAAW,SAAAC,KAAwC,CACpF,MAAMC,EAASC,EAAiB,EAC1B,CAAE,cAAAC,EAAe,QAAAC,CAAQ,EAAIC,EAAe,EAC5CC,EAAWC,EAAY,EACvBC,EAAYC,EAAc,EAE1BC,EAAaC,EAAgB,CAC/B,YAAaC,EACb,cAAAT,EACA,UAAAJ,EACA,SAAUc,EAAY,MACtB,QAAAT,EACA,OAAAH,EACA,SAAAD,CAAA,CACH,EAEKc,EAAqBC,EAAA,YACtBC,GAA6B,CACpB,KAAA,CAAE,KAAAC,GAASD,EACZC,GAELX,EAASY,EAAaV,EAAW,CAAE,QAASS,EAAK,EAAA,CAAI,CAAC,CAC1D,EACA,CAACT,EAAWF,CAAQ,CACxB,EAEA,aACKa,EACG,CAAA,SAAAC,EAAA,IAACC,EAAA,CAIG,IAAKrB,EACJ,GAAGU,EACJ,mBAAAI,CAAA,EAHK,SAASJ,EAAW,SAAS,IAAIT,GAAA,YAAAA,EAAQ,EAAE,EAAA,EAKxD,CAER"}