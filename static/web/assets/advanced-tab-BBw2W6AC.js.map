{"version":3,"file":"advanced-tab-BBw2W6AC.js","sources":["../../../node_modules/.pnpm/@mantine+core@6.0.22_@emotion+react@11.14.0_@types+react@18.3.22_react@18.3.1__@mantine+hooks_jfsbq3cmaybbfdd7w67rqetq3a/node_modules/@mantine/core/esm/Code/Code.styles.js","../../../node_modules/.pnpm/@mantine+core@6.0.22_@emotion+react@11.14.0_@types+react@18.3.22_react@18.3.1__@mantine+hooks_jfsbq3cmaybbfdd7w67rqetq3a/node_modules/@mantine/core/esm/Code/Code.js","../../../src/renderer/features/settings/components/advanced/styles-settings.tsx","../../../src/renderer/features/settings/components/advanced/advanced-tab.tsx"],"sourcesContent":["import { createStyles, rem } from '@mantine/styles';\n\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\nvar useStyles = createStyles((theme, { color: _color }) => {\n  const color = _color || (theme.colorScheme === \"dark\" ? \"dark\" : \"gray\");\n  const colors = theme.fn.variant({ color, variant: \"light\" });\n  return {\n    root: __spreadProps(__spreadValues({}, theme.fn.fontStyles()), {\n      lineHeight: theme.lineHeight,\n      padding: `${rem(2)} calc(${theme.spacing.xs} / 2)`,\n      borderRadius: theme.radius.sm,\n      color: theme.colorScheme === \"dark\" ? color === \"dark\" ? theme.colors.dark[0] : theme.white : theme.colors.dark[7],\n      backgroundColor: theme.colorScheme === \"dark\" && color === \"dark\" ? theme.colors.dark[5] : colors.background,\n      fontFamily: theme.fontFamilyMonospace,\n      fontSize: theme.fontSizes.xs\n    }),\n    block: {\n      padding: theme.spacing.xs,\n      margin: 0,\n      overflowX: \"auto\"\n    }\n  };\n});\n\nexport default useStyles;\n//# sourceMappingURL=Code.styles.js.map\n","import React, { forwardRef } from 'react';\nimport { useComponentDefaultProps } from '@mantine/styles';\nimport useStyles from './Code.styles.js';\nimport { Box } from '../Box/Box.js';\n\nvar __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __objRest = (source, exclude) => {\n  var target = {};\n  for (var prop in source)\n    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)\n      target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(source)) {\n      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))\n        target[prop] = source[prop];\n    }\n  return target;\n};\nconst defaultProps = {};\nconst Code = forwardRef((props, ref) => {\n  const _a = useComponentDefaultProps(\"Code\", defaultProps, props), { className, children, block, color, unstyled, variant } = _a, others = __objRest(_a, [\"className\", \"children\", \"block\", \"color\", \"unstyled\", \"variant\"]);\n  const { classes, cx } = useStyles({ color }, { name: \"Code\", unstyled, variant });\n  if (block) {\n    return /* @__PURE__ */ React.createElement(Box, __spreadValues({\n      component: \"pre\",\n      dir: \"ltr\",\n      className: cx(classes.root, classes.block, className),\n      ref\n    }, others), children);\n  }\n  return /* @__PURE__ */ React.createElement(Box, __spreadValues({\n    component: \"code\",\n    className: cx(classes.root, className),\n    ref,\n    dir: \"ltr\"\n  }, others), children);\n});\nCode.displayName = \"@mantine/core/Code\";\n\nexport { Code };\n//# sourceMappingURL=Code.js.map\n","import { Code } from '@mantine/core';\nimport { closeAllModals, openModal } from '@mantine/modals';\nimport { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { Button, ConfirmModal, Switch, Text, Textarea } from '/@/renderer/components';\nimport { SettingsOptions } from '/@/renderer/features/settings/components/settings-option';\nimport { useCssSettings, useSettingsStoreActions } from '/@/renderer/store';\nimport { sanitizeCss } from '/@/renderer/utils/sanitize';\n\nexport const StylesSettings = () => {\n    const [open, setOpen] = useState(false);\n    const { t } = useTranslation();\n\n    const { content, enabled } = useCssSettings();\n    const [css, setCss] = useState(content);\n\n    const { setSettings } = useSettingsStoreActions();\n\n    const handleSave = () => {\n        setSettings({\n            css: {\n                content: css,\n                enabled,\n            },\n        });\n    };\n\n    const handleResetToDefault = () => {\n        setSettings({\n            css: {\n                content,\n                enabled: true,\n            },\n        });\n        closeAllModals();\n    };\n\n    const openConfirmModal = () => {\n        openModal({\n            children: (\n                <ConfirmModal onConfirm={handleResetToDefault}>\n                    <Text color=\"red !important\">\n                        {t('setting.customCssNotice', { postProcess: 'sentenceCase' })}\n                    </Text>\n                </ConfirmModal>\n            ),\n            title: t('setting.customCssEnable', { postProcess: 'sentenceCase' }),\n        });\n    };\n\n    return (\n        <>\n            <SettingsOptions\n                control={\n                    <Switch\n                        checked={enabled}\n                        onChange={(e) => {\n                            if (!e.currentTarget.checked) {\n                                setSettings({\n                                    css: {\n                                        content,\n                                        enabled: false,\n                                    },\n                                });\n                            } else {\n                                openConfirmModal();\n                            }\n                        }}\n                    />\n                }\n                description={t('setting.customCssEnable', {\n                    context: 'description',\n                    postProcess: 'sentenceCase',\n                })}\n                title={t('setting.customCssEnable', { postProcess: 'sentenceCase' })}\n            />\n            {enabled && (\n                <>\n                    <SettingsOptions\n                        control={\n                            <>\n                                {open && (\n                                    <Button\n                                        compact\n                                        onClick={handleSave}\n                                        // disabled={isSaveButtonDisabled}\n                                        variant=\"filled\"\n                                    >\n                                        {t('common.save', { postProcess: 'titleCase' })}\n                                    </Button>\n                                )}\n                                <Button\n                                    compact\n                                    onClick={() => setOpen(!open)}\n                                    variant=\"filled\"\n                                >\n                                    {t(open ? 'common.close' : 'common.edit', {\n                                        postProcess: 'titleCase',\n                                    })}\n                                </Button>\n                            </>\n                        }\n                        description={t('setting.customCss', {\n                            context: 'description',\n                            postProcess: 'sentenceCase',\n                        })}\n                        title={t('setting.customCss', { postProcess: 'sentenceCase' })}\n                    />\n                    {open && (\n                        <>\n                            <Textarea\n                                autosize\n                                defaultValue={css}\n                                onBlur={(e) =>\n                                    setCss(sanitizeCss(`<style>${e.currentTarget.value}`))\n                                }\n                            />\n                            <Text>{t('common.preview', { postProcess: 'sentenceCase' })}: </Text>\n                            <Code block>{css}</Code>\n                        </>\n                    )}\n                </>\n            )}\n        </>\n    );\n};\n","import { Stack } from '@mantine/core';\n\nimport { StylesSettings } from '/@/renderer/features/settings/components/advanced/styles-settings';\n\nexport const AdvancedTab = () => {\n    return (\n        <Stack spacing=\"md\">\n            <StylesSettings />\n        </Stack>\n    );\n};\n"],"names":["__defProp","__defProps","__getOwnPropDescs","__getOwnPropSymbols","__hasOwnProp","__propIsEnum","__defNormalProp","obj","key","value","__spreadValues","a","b","prop","__spreadProps","useStyles","createStyles","theme","_color","color","colors","rem","__objRest","source","exclude","target","defaultProps","Code","forwardRef","props","ref","_a","useComponentDefaultProps","className","children","block","unstyled","variant","others","classes","cx","React","Box","StylesSettings","open","setOpen","useState","t","useTranslation","content","enabled","useCssSettings","css","setCss","setSettings","useSettingsStoreActions","handleSave","handleResetToDefault","closeAllModals","openConfirmModal","openModal","jsx","ConfirmModal","Text","jsxs","Fragment","SettingsOptions","Switch","e","Button","Textarea","sanitizeCss","AdvancedTab","Stack"],"mappings":"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","x_google_ignoreList":[0,1]}